<?php
/**
 * /Users/trailo/dev/yii/app/yii2admin2/backend/runtime/giiant/358b0e44f1c1670b558e36588c267e47
 *
 * @package default
 */


// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\controllers;

use backend\components\AccessRule;
use backend\components\Helper;
use Yii;
use yii\filters\VerbFilter;
use yii\helpers\Url;
use yii\web\Controller;

/**
 * AeCategoryController implements the CRUD actions for AeCategory model.
 */
class CrudBaseController extends Controller
{

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => \yii\filters\AccessControl::className(),
                // We will override the default rule config with the new AccessRule class
                'ruleConfig' => [
                    'class' => AccessRule::className(),
                ],
                'only' => ['create', 'update', 'delete', 'view'],
                'rules' => [
                    [
                        'actions' => ['view', 'update', 'create'],
                        'allow' => true, // If "false" the system would trigger a redirect to the users listing
                        'roles' => [
                            'admin',
                            'client',
                        ],
                    ],
                    [
                        'actions' => ['delete'],
                        'allow' => true,
                        'roles' => [
                            'admin',
                            'client',
                        ],
                    ],
                ],

                /*
                'only' => ['create','update','view'],
                'rules' => [
                    // allow authenticated users
                    [
                        // 'actions' => ['view'],
                        'allow' => true,
                        'roles' => ['@'],
                        // 'matchCallback' => function ($rule, $action) {
                        //     return date('d-m') === '31-10';
                        // }
                    ],
                    // everything else is denied
                ],
                */
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['post'],
                ],
            ],
        ];
    }

    public function init()
    {
        if (!isset(Yii::$app->session['user_id'])) {
            $url = Yii::$app->urlManager->createAbsoluteUrl(['auth']);
            header('Location: ' . $url);
            exit;
        }

        $menus = Helper::getMenusConfig();

        $request = Yii::$app->request;
        $controller = $request->getUrl();

        $allowed_urls = [];

        foreach ($menus as $menu) {

            if (isset($menu['url'][0])) {
                $allowed_urls[] = $menu['url'][0];
            }

            if (isset($menu['items'])) {
                foreach ($menu['items'] as $item) {
                    if (!isset($item['url']))
                        continue;

                    $allowed_urls[] = $item['url'][0];
                }
            }
        }

        $redirect = true;

        foreach ($allowed_urls as $allowed_url) {
            if (preg_match("~$allowed_url~", $controller)) {
                $redirect = false;
            }
        }

        if ($redirect) {
            $this->doRedirect();
        }

        return true;
    }

    private function doRedirect()
    {
        $home_url = Url::home(true);
        $url = Url::to($home_url . 'users/usergroups-user');
        $this->redirect($url);
        return true;
    }

}