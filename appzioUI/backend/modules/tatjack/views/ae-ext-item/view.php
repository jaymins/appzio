<?php

use yii\helpers\Html;
use yii\helpers\Url;
use yii\grid\GridView;
use yii\widgets\DetailView;
use yii\widgets\Pjax;
use dmstr\bootstrap\Tabs;
use backend\components\Helper;

/**
* @var yii\web\View $this
* @var backend\modules\tatjack\models\AeExtItem $model
*/
$copyParams = $model->attributes;

$this->title = Yii::t('backend', 'Ae Ext Item');
$this->params['breadcrumbs'][] = ['label' => Yii::t('backend', 'Ae Ext Items'), 'url' => ['index']];
$this->params['breadcrumbs'][] = ['label' => (string)$model->name, 'url' => ['view', 'id' => $model->id]];
$this->params['breadcrumbs'][] = Yii::t('backend', 'View');
?>
<div class="giiant-crud ae-ext-item-view">

    <!-- flash message -->
    <?php if (\Yii::$app->session->getFlash('deleteError') !== null) : ?>
        <span class="alert alert-info alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span></button>
            <?= \Yii::$app->session->getFlash('deleteError') ?>
        </span>
    <?php endif; ?>

    <h1>
        <?= Yii::t('backend', 'Ae Ext Item') ?>
        <small>
            <?= $model->name ?>
        </small>
    </h1>


    <div class="clearfix crud-navigation">

        <div class="pull-left">
            <?= Html::a('<span class="glyphicon glyphicon-list"></span> '
            . Yii::t('backend', 'Full list'), ['index'], ['class'=>'btn btn-default']) ?>
        </div>

    </div>

    <hr />

    <?php $this->beginBlock('backend\modules\tatjack\models\AeExtItem'); ?>
    
    <?= DetailView::widget([
    'model' => $model,
    'attributes' => [
    // generated by schmunk42\giiant\generators\crud\providers\core\RelationProvider::attributeFormat
[
    'format' => 'html',
    'attribute' => 'user_id',
    'value' => ($model->getPlay()->one() ?
        Html::a('<i class="glyphicon glyphicon-list"></i>', ['/tatjack/ae-game-play/index']).' '.
        Html::a('<i class="glyphicon glyphicon-circle-arrow-right"></i> '.$model->getPlay()->one()->id, ['/tatjack/ae-game-play/view', 'id' => $model->getPlay()->one()->id,]).' '.
        Html::a('<i class="glyphicon glyphicon-paperclip"></i>', ['create', 'AeExtItem'=>['play_id' => $model->play_id]])
        : 
        '<span class="label label-warning">?</span>'),
],
        'name',
        'description',
        'price',
	    [
		    'class' => yii\grid\DataColumn::className(),
		    'attribute' => 'time_to_draw',
		    'value' => function ($model) {
			    return $model->time;
		    },
		    'format' => 'raw',
	    ],
	    [
		    'class' => yii\grid\DataColumn::className(),
		    'attribute' => 'images',
		    'value' => function ($model) {
			    $images = @json_decode( $model->images, true );

			    if ( $images AND isset($images['itempic']) ) {

			        $output = '';

				    foreach ( $images as $image ) {
					    $image_path = basename($image);
					    $full_path = Helper::getUploadURL() . $image_path;
					    $output .= '<a target="_blank" href="'. $full_path .'"><img style="max-width: 200px;" src="'. $full_path .'" ></a>';
					    $output .= '<br />';
			        }

				    return $output;
			    }

			    return false;
		    },
		    'format' => 'raw',
	    ],
	    [
		    'class' => yii\grid\DataColumn::className(),
		    'attribute' => 'date_added',
		    'value' => function ($model) {
			    return date( 'F j, Y', $model->date_added );
		    },
		    'format' => 'raw',
	    ],
        'status',
        'city',
        'country',
        'lat',
        'lon',
// generated by schmunk42\giiant\generators\crud\providers\core\RelationProvider::attributeFormat
[
    'format' => 'html',
    'attribute' => 'category_id',
    'value' => ($model->getCategory()->one() ? 
        Html::a('<i class="glyphicon glyphicon-list"></i>', ['/tatjack/ae-ext-items-category/index']).' '.
        Html::a('<i class="glyphicon glyphicon-circle-arrow-right"></i> '.$model->getCategory()->one()->name, ['/tatjack/ae-ext-items-category/view', 'id' => $model->getCategory()->one()->id,]).' '.
        Html::a('<i class="glyphicon glyphicon-paperclip"></i>', ['create', 'AeExtItem'=>['category_id' => $model->category_id]])
        : 
        '<span class="label label-warning">?</span>'),
],
    ],
    ]); ?>

    
    <hr/>

    <?= Html::a('<span class="glyphicon glyphicon-trash"></span> ' . Yii::t('backend', 'Delete'), ['delete', 'id' => $model->id],
    [
    'class' => 'btn btn-danger',
    'data-confirm' => '' . Yii::t('backend', 'Are you sure to delete this item?') . '',
    'data-method' => 'post',
    ]); ?>
    <?php $this->endBlock(); ?>


    
<?php $this->beginBlock('AeExtItemsLikes'); ?>
<div style='position: relative'>
<div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Ae Ext Items Likes',
            ['/tatjack/ae-ext-items-like/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
</div>
</div>
<?php Pjax::begin(['id'=>'pjax-AeExtItemsLikes', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-AeExtItemsLikes ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?=
 '<div class="table-responsive">'
 . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider([
        'query' => $model->getAeExtItemsLikes(),
        'pagination' => [
            'pageSize' => 20,
            'pageParam'=>'page-aeextitemslikes',
        ]
    ]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [
 [
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = '/tatjack/ae-ext-items-like' . '/' . $action;
        $params['AeExtItemsLike'] = ['item_id' => $model->primaryKey()[0]];
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => '/tatjack/ae-ext-items-like'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\core\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'play_id',
    'value' => function ($model) {
        if ($rel = $model->getPlay()->one()) {
            return Html::a($rel->id, ['/tatjack/ae-game-play/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'status',
]
])
 . '</div>' 
?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('AeExtItemsReports'); ?>
<div style='position: relative'>
<div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Ae Ext Items Reports',
            ['/tatjack/ae-ext-items-report/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
</div>
</div>
<?php Pjax::begin(['id'=>'pjax-AeExtItemsReports', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-AeExtItemsReports ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?=
 '<div class="table-responsive">'
 . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider([
        'query' => $model->getAeExtItemsReports(),
        'pagination' => [
            'pageSize' => 20,
            'pageParam'=>'page-aeextitemsreports',
        ]
    ]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [
 [
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = '/tatjack/ae-ext-items-report' . '/' . $action;
        $params['AeExtItemsReport'] = ['item_id' => $model->primaryKey()[0]];
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => '/tatjack/ae-ext-items-report'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\core\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'play_id',
    'value' => function ($model) {
        if ($rel = $model->getPlay()->one()) {
            return Html::a($rel->id, ['/tatjack/ae-game-play/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\core\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'item_owner_id',
    'value' => function ($model) {
        if ($rel = $model->getItemOwner()->one()) {
            return Html::a($rel->id, ['/tatjack/ae-game-play/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'reason:ntext',
        'created_at',
        'updated_at',
]
])
 . '</div>' 
?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


    <?= Tabs::widget(
                 [
                     'id' => 'relation-tabs',
                     'encodeLabels' => false,
                     'items' => [
 [
    'label'   => '<b class=""># '.$model->id.'</b>',
    'content' => $this->blocks['backend\modules\tatjack\models\AeExtItem'],
    'active'  => true,
],
[
    'content' => $this->blocks['AeExtItemsLikes'],
    'label'   => '<small>Ae Ext Items Likes <span class="badge badge-default">'.count($model->getAeExtItemsLikes()->asArray()->all()).'</span></small>',
    'active'  => false,
],
[
    'content' => $this->blocks['AeExtItemsReports'],
    'label'   => '<small>Ae Ext Items Reports <span class="badge badge-default">'.count($model->getAeExtItemsReports()->asArray()->all()).'</span></small>',
    'active'  => false,
],
 ]
                 ]
    );
    ?>
</div>
