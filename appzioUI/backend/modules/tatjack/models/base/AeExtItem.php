<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\tatjack\models\base;

use Yii;

/**
 * This is the base-model class for table "ae_ext_items".
 *
 * @property string $id
 * @property string $play_id
 * @property string $game_id
 * @property integer $category_id
 * @property string $name
 * @property string $description
 * @property string $price
 * @property string $time
 * @property string $images
 * @property integer $date_added
 * @property string $status
 * @property integer $featured
 * @property integer $external
 * @property string $city
 * @property string $country
 * @property string $lat
 * @property string $lon
 * @property string $buyer_play_id
 * @property string $source
 * @property integer $importa_date
 * @property string $external_id
 *
 * @property \backend\modules\tatjack\models\AeExtBooking[] $aeExtBookings
 * @property \backend\modules\tatjack\models\AeGamePlay $play
 * @property \backend\modules\tatjack\models\AeGame $game
 * @property \backend\modules\tatjack\models\AeExtItemsCategory $category
 * @property \backend\modules\tatjack\models\AeExtItemsCategory $category0
 * @property \backend\modules\tatjack\models\AeExtItemsLike[] $aeExtItemsLikes
 * @property \backend\modules\tatjack\models\AeExtItemsReport[] $aeExtItemsReports
 * @property string $aliasModel
 */
abstract class AeExtItem extends \backend\models\CrudBase
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'ae_ext_items';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['play_id', 'game_id', 'name', 'description', 'price', 'time', 'images', 'date_added', 'status', 'city', 'country', 'lat', 'lon', 'source', 'importa_date', 'external_id'], 'required'],
            [['play_id', 'game_id', 'category_id', 'date_added', 'featured', 'external', 'buyer_play_id', 'importa_date'], 'integer'],
            [['price', 'lat', 'lon'], 'number'],
            [['images'], 'string'],
            [['name', 'description', 'time', 'status', 'city', 'country', 'source', 'external_id'], 'string', 'max' => 255],
            [['play_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\tatjack\models\AeGamePlay::className(), 'targetAttribute' => ['play_id' => 'id']],
            [['game_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\tatjack\models\AeGame::className(), 'targetAttribute' => ['game_id' => 'id']],
            [['category_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\tatjack\models\AeExtItemsCategory::className(), 'targetAttribute' => ['category_id' => 'id']],
            [['category_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\tatjack\models\AeExtItemsCategory::className(), 'targetAttribute' => ['category_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('backend', 'ID'),
            'play_id' => Yii::t('backend', 'Play ID'),
            'game_id' => Yii::t('backend', 'Game ID'),
            'category_id' => Yii::t('backend', 'Category ID'),
            'name' => Yii::t('backend', 'Name'),
            'description' => Yii::t('backend', 'Description'),
            'price' => Yii::t('backend', 'Price'),
            'time' => Yii::t('backend', 'Time'),
            'images' => Yii::t('backend', 'Images'),
            'date_added' => Yii::t('backend', 'Date Added'),
            'status' => Yii::t('backend', 'Status'),
            'featured' => Yii::t('backend', 'Featured'),
            'external' => Yii::t('backend', 'External'),
            'city' => Yii::t('backend', 'City'),
            'country' => Yii::t('backend', 'Country'),
            'lat' => Yii::t('backend', 'Lat'),
            'lon' => Yii::t('backend', 'Lon'),
            'buyer_play_id' => Yii::t('backend', 'Buyer Play ID'),
            'source' => Yii::t('backend', 'Source'),
            'importa_date' => Yii::t('backend', 'Importa Date'),
            'external_id' => Yii::t('backend', 'External ID'),

            'user_id' => Yii::t('backend', 'User ID'),
            'time_to_draw' => Yii::t('backend', 'Time to Draw'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtBookings()
    {
        return $this->hasMany(\backend\modules\tatjack\models\AeExtBooking::className(), ['item_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPlay()
    {
        return $this->hasOne(\backend\modules\tatjack\models\AeGamePlay::className(), ['id' => 'play_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGame()
    {
        return $this->hasOne(\backend\modules\tatjack\models\AeGame::className(), ['id' => 'game_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategory()
    {
        return $this->hasOne(\backend\modules\tatjack\models\AeExtItemsCategory::className(), ['id' => 'category_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategory0()
    {
        return $this->hasOne(\backend\modules\tatjack\models\AeExtItemsCategory::className(), ['id' => 'category_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtItemsLikes()
    {
        return $this->hasMany(\backend\modules\tatjack\models\AeExtItemsLike::className(), ['item_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtItemsReports()
    {
        return $this->hasMany(\backend\modules\tatjack\models\AeExtItemsReport::className(), ['item_id' => 'id']);
    }


    
    /**
     * @inheritdoc
     * @return \backend\modules\tatjack\models\query\AeExtItemQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\tatjack\models\query\AeExtItemQuery(get_called_class());
    }


}
