<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\users\models\base;

use Yii;

/**
 * This is the base-model class for table "ae_ext_mobilematching".
 *
 * @property string $id
 * @property string $game_id
 * @property string $play_id
 * @property string $lat
 * @property string $lon
 * @property string $last_update
 * @property string $gender
 * @property integer $match_always
 * @property integer $score
 * @property integer $flag
 * @property integer $education
 * @property string $hindu_caste
 * @property string $role
 * @property integer $is_boosted
 * @property integer $boosted_timestamp
 *
 * @property \backend\modules\users\models\AeGame $game
 * @property \backend\modules\users\models\AeGamePlay $play
 * @property string $aliasModel
 */
abstract class AeExtMobilematching extends \backend\models\CrudBase
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'ae_ext_mobilematching';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['game_id', 'play_id', 'lat', 'lon', 'gender', 'score', 'flag', 'hindu_caste', 'role', 'is_boosted', 'boosted_timestamp'], 'required'],
            [['game_id', 'play_id', 'match_always', 'score', 'flag', 'education', 'is_boosted', 'boosted_timestamp'], 'integer'],
            [['lat', 'lon'], 'number'],
            [['last_update'], 'safe'],
            [['gender', 'role'], 'string', 'max' => 50],
            [['hindu_caste'], 'string', 'max' => 80],
            [['game_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\users\models\AeGame::className(), 'targetAttribute' => ['game_id' => 'id']],
            [['play_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\users\models\AeGamePlay::className(), 'targetAttribute' => ['play_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('backend', 'ID'),
            'game_id' => Yii::t('backend', 'Game ID'),
            'play_id' => Yii::t('backend', 'Play ID'),
            'lat' => Yii::t('backend', 'Lat'),
            'lon' => Yii::t('backend', 'Lon'),
            'last_update' => Yii::t('backend', 'Last Update'),
            'gender' => Yii::t('backend', 'Gender'),
            'match_always' => Yii::t('backend', 'Match Always'),
            'score' => Yii::t('backend', 'Score'),
            'flag' => Yii::t('backend', 'Flag'),
            'education' => Yii::t('backend', 'Education'),
            'hindu_caste' => Yii::t('backend', 'Hindu Caste'),
            'role' => Yii::t('backend', 'Role'),
            'is_boosted' => Yii::t('backend', 'Is Boosted'),
            'boosted_timestamp' => Yii::t('backend', 'Boosted Timestamp'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGame()
    {
        return $this->hasOne(\backend\modules\users\models\AeGame::className(), ['id' => 'game_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPlay()
    {
        return $this->hasOne(\backend\modules\users\models\AeGamePlay::className(), ['id' => 'play_id']);
    }


    
    /**
     * @inheritdoc
     * @return \backend\modules\users\models\query\AeExtMobilematchingQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\users\models\query\AeExtMobilematchingQuery(get_called_class());
    }


}
