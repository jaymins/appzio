<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\tickers\models\base;

use Yii;

/**
 * This is the base-model class for table "ae_ext_ticker_daily".
 *
 * @property integer $id
 * @property string $ticker_id
 * @property string $ticker
 * @property integer $timestamp
 * @property double $open
 * @property double $high
 * @property double $low
 * @property double $value
 * @property integer $volume
 * @property double $previousclose
 * @property double $valuechange
 * @property integer $date
 * @property integer $ref_lock
 *
 * @property \backend\modules\tickers\models\AeExtTicker $ticker0
 * @property string $aliasModel
 */
abstract class AeExtTickerDaily extends \backend\models\CrudBase
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'ae_ext_ticker_daily';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['ticker_id', 'ticker', 'open', 'high', 'low', 'value'], 'required'],
            [['ticker_id', 'timestamp', 'volume', 'date', 'ref_lock'], 'integer'],
            [['open', 'high', 'low', 'value', 'previousclose', 'valuechange'], 'number'],
            [['ticker'], 'string', 'max' => 50],
            [['ticker_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\tickers\models\AeExtTicker::className(), 'targetAttribute' => ['ticker_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('backend', 'ID'),
            'ticker_id' => Yii::t('backend', 'Ticker ID'),
            'ticker' => Yii::t('backend', 'Ticker'),
            'timestamp' => Yii::t('backend', 'Timestamp'),
            'open' => Yii::t('backend', 'Open'),
            'high' => Yii::t('backend', 'High'),
            'low' => Yii::t('backend', 'Low'),
            'value' => Yii::t('backend', 'Value'),
            'volume' => Yii::t('backend', 'Volume'),
            'previousclose' => Yii::t('backend', 'Previousclose'),
            'valuechange' => Yii::t('backend', 'Valuechange'),
            'date' => Yii::t('backend', 'Date'),
            'ref_lock' => Yii::t('backend', 'Ref Lock'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTicker0()
    {
        return $this->hasOne(\backend\modules\tickers\models\AeExtTicker::className(), ['id' => 'ticker_id']);
    }


    
    /**
     * @inheritdoc
     * @return \backend\modules\tickers\models\query\AeExtTickerDailyQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\tickers\models\query\AeExtTickerDailyQuery(get_called_class());
    }


}
