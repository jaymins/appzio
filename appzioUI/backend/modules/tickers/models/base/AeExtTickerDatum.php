<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\tickers\models\base;

use Yii;

/**
 * This is the base-model class for table "ae_ext_ticker_data".
 *
 * @property integer $id
 * @property string $ticker_id
 * @property string $date
 * @property double $open
 * @property double $hight
 * @property double $low
 * @property double $close
 * @property double $volume
 * @property integer $update_date
 *
 * @property \backend\modules\tickers\models\AeExtTicker $ticker
 * @property string $aliasModel
 */
abstract class AeExtTickerDatum extends \backend\models\CrudBase
{


    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'ae_ext_ticker_data';
    }

    /**
     * @inheritdoc
     * @return \backend\modules\tickers\models\query\AeExtTickerDatumQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\tickers\models\query\AeExtTickerDatumQuery(get_called_class());
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['ticker_id', 'update_date'], 'required'],
            [['ticker_id', 'update_date'], 'integer'],
            [['date'], 'safe'],
            [['open', 'hight', 'low', 'close', 'volume'], 'number'],
            [['ticker_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\tickers\models\AeExtTicker::className(), 'targetAttribute' => ['ticker_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('backend', 'ID'),
            'ticker_id' => Yii::t('backend', 'Ticker ID'),
            'date' => Yii::t('backend', 'Date'),
            'open' => Yii::t('backend', 'Open'),
            'hight' => Yii::t('backend', 'Hight'),
            'low' => Yii::t('backend', 'Low'),
            'close' => Yii::t('backend', 'Close'),
            'volume' => Yii::t('backend', 'volume'),
            'update_date' => Yii::t('backend', 'Update Date'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTicker()
    {
        return $this->hasOne(\backend\modules\tickers\models\AeExtTicker::className(), ['id' => 'ticker_id']);
    }


}
