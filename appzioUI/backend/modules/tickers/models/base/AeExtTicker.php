<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\tickers\models\base;

use Yii;

/**
 * This is the base-model class for table "ae_ext_ticker".
 *
 * @property string $id
 * @property string $ticker
 * @property string $company
 * @property string $currency
 * @property string $exchange
 * @property string $exchange_name
 * @property integer $ticker_date
 * @property integer $overall
 * @property integer $last_update
 * @property string $log
 *
 * @property \backend\modules\tickers\models\AeExtTickerDaily[] $aeExtTickerDailies
 * @property \backend\modules\tickers\models\AeExtTickerDatum[] $aeExtTickerData
 * @property \backend\modules\tickers\models\AeExtTickerTrade[] $aeExtTickerTrades
 * @property string $aliasModel
 */
abstract class AeExtTicker extends \backend\models\CrudBase
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'ae_ext_ticker';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['ticker', 'currency', 'exchange_name'], 'required'],
            [['ticker_date', 'overall', 'last_update'], 'integer'],
            [['log'], 'string'],
            [['ticker'], 'string', 'max' => 100],
            [['company', 'exchange', 'exchange_name'], 'string', 'max' => 255],
            [['currency'], 'string', 'max' => 10],
            [['ticker'], 'unique']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('backend', 'ID'),
            'ticker' => Yii::t('backend', 'Ticker'),
            'company' => Yii::t('backend', 'Company'),
            'currency' => Yii::t('backend', 'Currency'),
            'exchange' => Yii::t('backend', 'Exchange'),
            'exchange_name' => Yii::t('backend', 'Exchange Name'),
            'ticker_date' => Yii::t('backend', 'Ticker Date'),
            'overall' => Yii::t('backend', 'Overall'),
            'last_update' => Yii::t('backend', 'Last Update'),
            'log' => Yii::t('backend', 'Log'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtTickerDailies()
    {
        return $this->hasMany(\backend\modules\tickers\models\AeExtTickerDaily::className(), ['ticker_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtTickerData()
    {
        return $this->hasMany(\backend\modules\tickers\models\AeExtTickerDatum::className(), ['ticker_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtTickerTrades()
    {
        return $this->hasMany(\backend\modules\tickers\models\AeExtTickerTrade::className(), ['ticker_id' => 'id']);
    }


    
    /**
     * @inheritdoc
     * @return \backend\modules\tickers\models\query\AeExtTickerQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\tickers\models\query\AeExtTickerQuery(get_called_class());
    }


}
