<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\products\models\base;

use Yii;

/**
 * This is the base-model class for table "ae_ext_products".
 *
 * @property integer $id
 * @property integer $app_id
 * @property integer $category_id
 * @property integer $play_id
 * @property string $amazon_product_id
 * @property string $photo
 * @property string $additional_photos
 * @property string $title
 * @property string $header
 * @property string $description
 * @property string $link
 * @property integer $rating
 * @property string $price
 * @property integer $points_value
 * @property integer $featured
 * @property integer $sorting
 *
 * @property \backend\modules\products\models\AeGamePlay $play
 * @property \backend\modules\products\models\AeGame $app
 * @property \backend\modules\products\models\AeExtProductsCategory $category
 * @property \backend\modules\products\models\AeExtProductsBookmark[] $aeExtProductsBookmarks
 * @property \backend\modules\products\models\AeExtProductsCart[] $aeExtProductsCarts
 * @property \backend\modules\products\models\AeExtProductsPhoto[] $aeExtProductsPhotos
 * @property \backend\modules\products\models\AeExtProductsTagsProduct[] $aeExtProductsTagsProducts
 * @property \backend\modules\products\models\AeExtProductsTag[] $tags
 * @property string $aliasModel
 */
abstract class AeExtProduct extends \backend\models\CrudBase
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'ae_ext_products';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['app_id', 'amazon_product_id', 'title', 'description', 'link', 'price'], 'required'],
            [['app_id', 'category_id', 'play_id', 'rating', 'points_value', 'featured', 'sorting'], 'integer'],
            [['header', 'description', 'link'], 'string'],
            [['price'], 'number'],
            [['amazon_product_id', 'title'], 'string', 'max' => 255],
            [['play_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\products\models\AeGamePlay::className(), 'targetAttribute' => ['play_id' => 'id']],
            [['app_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\products\models\AeGame::className(), 'targetAttribute' => ['app_id' => 'id']],
            [['category_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\products\models\AeExtProductsCategory::className(), 'targetAttribute' => ['category_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('backend', 'ID'),
            'app_id' => Yii::t('backend', 'App ID'),
            'category_id' => Yii::t('backend', 'Category ID'),
            'play_id' => Yii::t('backend', 'Play ID'),
            'amazon_product_id' => Yii::t('backend', 'Amazon Product ID'),
            'photo' => Yii::t('backend', 'Photo'),
            'additional_photos' => Yii::t('backend', 'Additional Photos'),
            'title' => Yii::t('backend', 'Title'),
            'header' => Yii::t('backend', 'Header'),
            'description' => Yii::t('backend', 'Description'),
            'link' => Yii::t('backend', 'Link'),
            'rating' => Yii::t('backend', 'Rating'),
            'price' => Yii::t('backend', 'Price'),
            'points_value' => Yii::t('backend', 'Points Value'),
            'featured' => Yii::t('backend', 'Featured'),
            'sorting' => Yii::t('backend', 'Sorting'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPlay()
    {
        return $this->hasOne(\backend\modules\products\models\AeGamePlay::className(), ['id' => 'play_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getApp()
    {
        return $this->hasOne(\backend\modules\products\models\AeGame::className(), ['id' => 'app_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategory()
    {
        return $this->hasOne(\backend\modules\products\models\AeExtProductsCategory::className(), ['id' => 'category_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtProductsBookmarks()
    {
        return $this->hasMany(\backend\modules\products\models\AeExtProductsBookmark::className(), ['product_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtProductsCarts()
    {
        return $this->hasMany(\backend\modules\products\models\AeExtProductsCart::className(), ['product_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtProductsPhotos()
    {
        return $this->hasMany(\backend\modules\products\models\AeExtProductsPhoto::className(), ['product_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtProductsTagsProducts()
    {
        return $this->hasMany(\backend\modules\products\models\AeExtProductsTagsProduct::className(), ['product_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTags()
    {
        return $this->hasMany(\backend\modules\products\models\AeExtProductsTag::className(), ['id' => 'tag_id'])->viaTable('ae_ext_products_tags_products', ['product_id' => 'id']);
    }


    
    /**
     * @inheritdoc
     * @return \backend\modules\products\models\query\AeExtProductQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\products\models\query\AeExtProductQuery(get_called_class());
    }


}
