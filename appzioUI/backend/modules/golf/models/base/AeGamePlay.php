<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\golf\models\base;

use Yii;

/**
 * This is the base-model class for table "ae_game_play".
 *
 * @property string $id
 * @property string $role_id
 * @property string $game_id
 * @property string $user_id
 * @property string $last_update
 * @property string $created
 * @property integer $progress
 * @property integer $status
 * @property string $alert
 * @property integer $level
 * @property string $current_level_id
 * @property integer $priority
 * @property integer $branch_starttime
 * @property integer $last_action_update
 * @property string $autogenerated_styles
 *
 * @property \backend\modules\golf\models\AeChat[] $aeChats
 * @property \backend\modules\golf\models\AeChatUser[] $aeChatUsers
 * @property \backend\modules\golf\models\AeExtMobilefeedbacktool[] $aeExtMobilefeedbacktools
 * @property \backend\modules\golf\models\AeExtMobilefeedbacktoolTeam[] $aeExtMobilefeedbacktoolTeams
 * @property \backend\modules\golf\models\AeExtMobilefeedbacktoolTeamsMember[] $aeExtMobilefeedbacktoolTeamsMembers
 * @property \backend\modules\golf\models\AeExtMobilefeedbacktoolTeam[] $teams
 * @property \backend\modules\golf\models\AeExtMobilematching[] $aeExtMobilematchings
 * @property \backend\modules\golf\models\AeExtMobileproperty[] $aeExtMobileproperties
 * @property \backend\modules\golf\models\AeExtMobilepropertyBookmark[] $aeExtMobilepropertyBookmarks
 * @property \backend\modules\golf\models\AeExtMobilepropertyUser[] $aeExtMobilepropertyUsers
 * @property \backend\modules\golf\models\AeExtMobilepropertyUser[] $aeExtMobilepropertyUsers0
 * @property \backend\modules\golf\models\AeExtTask[] $aeExtTasks
 * @property \backend\modules\golf\models\AeGame $game
 * @property \backend\modules\golf\models\UsergroupsUser $user
 * @property \backend\modules\golf\models\AeRole $role
 * @property \backend\modules\golf\models\AeGamePlayAction[] $aeGamePlayActions
 * @property \backend\modules\golf\models\AeGamePlayKeyvaluestorage[] $aeGamePlayKeyvaluestorages
 * @property \backend\modules\golf\models\AeNotification[] $aeNotifications
 * @property string $aliasModel
 */
abstract class AeGamePlay extends \backend\models\CrudBase
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'ae_game_play';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['role_id', 'game_id', 'user_id', 'progress', 'status', 'level', 'current_level_id', 'priority', 'branch_starttime', 'last_action_update'], 'integer'],
            [['last_update', 'created'], 'safe'],
            [['alert', 'current_level_id', 'branch_starttime', 'last_action_update', 'autogenerated_styles'], 'required'],
            [['autogenerated_styles'], 'string'],
            [['alert'], 'string', 'max' => 255],
            [['game_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\golf\models\AeGame::className(), 'targetAttribute' => ['game_id' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\golf\models\UsergroupsUser::className(), 'targetAttribute' => ['user_id' => 'id']],
            [['role_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\golf\models\AeRole::className(), 'targetAttribute' => ['role_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('backend', 'ID'),
            'role_id' => Yii::t('backend', 'Role ID'),
            'game_id' => Yii::t('backend', 'Game ID'),
            'user_id' => Yii::t('backend', 'User ID'),
            'last_update' => Yii::t('backend', 'Last Update'),
            'created' => Yii::t('backend', 'Created'),
            'progress' => Yii::t('backend', 'Progress'),
            'status' => Yii::t('backend', 'Status'),
            'alert' => Yii::t('backend', 'Alert'),
            'level' => Yii::t('backend', 'Level'),
            'current_level_id' => Yii::t('backend', 'Current Level ID'),
            'priority' => Yii::t('backend', 'Priority'),
            'branch_starttime' => Yii::t('backend', 'Branch Starttime'),
            'last_action_update' => Yii::t('backend', 'Last Action Update'),
            'autogenerated_styles' => Yii::t('backend', 'Autogenerated Styles'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeChats()
    {
        return $this->hasMany(\backend\modules\golf\models\AeChat::className(), ['owner_play_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeChatUsers()
    {
        return $this->hasMany(\backend\modules\golf\models\AeChatUser::className(), ['chat_user_play_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtMobilefeedbacktools()
    {
        return $this->hasMany(\backend\modules\golf\models\AeExtMobilefeedbacktool::className(), ['author_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtMobilefeedbacktoolTeams()
    {
        return $this->hasMany(\backend\modules\golf\models\AeExtMobilefeedbacktoolTeam::className(), ['owner_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtMobilefeedbacktoolTeamsMembers()
    {
        return $this->hasMany(\backend\modules\golf\models\AeExtMobilefeedbacktoolTeamsMember::className(), ['play_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTeams()
    {
        return $this->hasMany(\backend\modules\golf\models\AeExtMobilefeedbacktoolTeam::className(), ['id' => 'team_id'])->viaTable('ae_ext_mobilefeedbacktool_teams_members', ['play_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtMobilematchings()
    {
        return $this->hasMany(\backend\modules\golf\models\AeExtMobilematching::className(), ['play_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtMobileproperties()
    {
        return $this->hasMany(\backend\modules\golf\models\AeExtMobileproperty::className(), ['play_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtMobilepropertyBookmarks()
    {
        return $this->hasMany(\backend\modules\golf\models\AeExtMobilepropertyBookmark::className(), ['play_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtMobilepropertyUsers()
    {
        return $this->hasMany(\backend\modules\golf\models\AeExtMobilepropertyUser::className(), ['user_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtMobilepropertyUsers0()
    {
        return $this->hasMany(\backend\modules\golf\models\AeExtMobilepropertyUser::className(), ['agent_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeExtTasks()
    {
        return $this->hasMany(\backend\modules\golf\models\AeExtTask::className(), ['assigned_user' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGame()
    {
        return $this->hasOne(\backend\modules\golf\models\AeGame::className(), ['id' => 'game_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\backend\modules\golf\models\UsergroupsUser::className(), ['id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRole()
    {
        return $this->hasOne(\backend\modules\golf\models\AeRole::className(), ['id' => 'role_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeGamePlayActions()
    {
        return $this->hasMany(\backend\modules\golf\models\AeGamePlayAction::className(), ['play_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeGamePlayKeyvaluestorages()
    {
        return $this->hasMany(\backend\modules\golf\models\AeGamePlayKeyvaluestorage::className(), ['value' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAeNotifications()
    {
        return $this->hasMany(\backend\modules\golf\models\AeNotification::className(), ['play_id' => 'id']);
    }


    
    /**
     * @inheritdoc
     * @return \backend\modules\golf\models\query\AeGamePlayQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\golf\models\query\AeGamePlayQuery(get_called_class());
    }


}
